#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble

\end_preamble
\use_default_options true
\begin_modules
sweave
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Flex Sweave Options
status open

\begin_layout Plain Layout

echo=FALSE,center.fig=TRUE 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setkeys{Gin}{width=
\backslash
textwidth} 
\end_layout

\end_inset


\end_layout

\begin_layout Chunk
<<RPackages,results=hide>>=
\end_layout

\begin_layout Chunk
source("../plots/r.r")
\end_layout

\begin_layout Chunk
@
\end_layout

\begin_layout Title
A Comparison of ILS, GLS and AGLS
\end_layout

\begin_layout Author
Hiram van Paassen 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 Tim Soethout
\end_layout

\begin_layout Verse
Evolutionary Computing Course 2011--2012, University of Utrecht
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
The goal of this assignment is to get acquainted with metaheuristic search.
 Multiple algorithms were run on four different applications.
 The algorithms are 
\emph on
Iterated Local Search
\emph default
 (ILS), 
\emph on
Genetic Local Search
\emph default
 (GLS) and 
\emph on
Adaptive Genetic Local Search
\emph default
 (AGLS).
 The four problem domains are 
\emph on
Maximum Satisfiability
\emph default
, 
\emph on
One Dimensional Bin Packing
\emph default
, 
\emph on
Permutation Flow Shop
\emph default
 and 
\emph on
Personnel Scheduling
\emph default
.
 
\end_layout

\begin_layout Section
Implementation
\end_layout

\begin_layout Subsection
Framework
\end_layout

\begin_layout Standard
For implementing the algorithms the HyFlex framework
\begin_inset CommandInset citation
LatexCommand cite
key "burke2011hyflex"

\end_inset

 is used.
 This java framework contains a base for the algorithms and definitions
 and instances of the problems.
\end_layout

\begin_layout Subsection
ILS
\end_layout

\begin_layout Standard
Iterated Local Search begins with initializing a random first solution.
 Then until the time limit is reached, repeats applying a predefined mutation
 and local search and replaces the solutions if the result is better.
 There is a 50 percent chance that a worse solution is accepted anyway.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Formula $s\leftarrow$
\end_inset


\noun on
GenerateInitialSolution()
\end_layout

\begin_layout Plain Layout

\series bold
while
\series default
 
\noun on

\begin_inset Formula $\neg$
\end_inset

TimeExpired()
\end_layout

\begin_layout Plain Layout

\series bold
do
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset Formula $s'\leftarrow$
\end_inset


\noun on
 Mutate(
\begin_inset Formula $s$
\end_inset

)
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset Formula $s''\leftarrow$
\end_inset

 
\noun on
LocalSearch(
\begin_inset Formula $s'$
\end_inset

)
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\series bold
if
\series default
 
\begin_inset Formula $f(s'')>f(s)\lor P(50\%)=1$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Formula $s\leftarrow s''$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Pseudocode Iterated Local Search
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
GLS
\end_layout

\begin_layout Standard
Genetic Local Search initialized a random population 
\begin_inset Formula $P$
\end_inset

 of size 
\begin_inset Formula $n=10$
\end_inset

.
 Then in each iteration with a 50 percent chance either 
\emph on
crossover
\emph default
 or a standard LS iteration is done.
 A new solution is inserted in the population when the acceptance criterion
 is reached.
 This is done by replacing the worst solution when the fitness of the new
 solution is higher.
 In the case of ILS there is also a 50 percent chance a worse solution is
 inserted.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\series bold
for all
\series default
 
\begin_inset Formula $s\in P$
\end_inset


\end_layout

\begin_layout Plain Layout

\series bold
do
\series default
 
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset Formula $s\leftarrow$
\end_inset


\noun on
GenerateInitialSolution()
\end_layout

\begin_layout Plain Layout

\series bold
while
\series default
 
\noun on

\begin_inset Formula $\neg$
\end_inset

TimeExpired()
\end_layout

\begin_layout Plain Layout

\series bold
do
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset Formula $p_{1}\leftarrow$
\end_inset

 
\noun on
RandomSelectFromPupulation(
\begin_inset Formula $P$
\end_inset

)
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset Formula $p_{2}\leftarrow$
\end_inset

 
\noun on
RandomSelectFromPupulation(
\begin_inset Formula $P$
\end_inset

)
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\series bold
if
\series default
 
\begin_inset Formula $P(50\%)=1$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\series bold
then
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Formula $s'\leftarrow$
\end_inset

 
\noun on
CrossOver(
\begin_inset Formula $p_{1},p_{2}$
\end_inset

)
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Formula $s''\leftarrow$
\end_inset


\noun on
 LocalSearch(
\begin_inset Formula $s'$
\end_inset

)
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\noun on
AcceptanceCriterion(
\begin_inset Formula $P,s''$
\end_inset

);
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\series bold
else
\series default
 
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Formula $p_{1}'\leftarrow$
\end_inset


\noun on
 Mutate(
\begin_inset Formula $p_{1}$
\end_inset

); 
\noun default

\begin_inset Formula $p_{2}'\leftarrow$
\end_inset


\noun on
 Mutate(
\begin_inset Formula $p_{2}$
\end_inset

)
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Formula $p_{1}''\leftarrow$
\end_inset

 
\noun on
LocalSearch(
\begin_inset Formula $p_{1}'$
\end_inset

);
\noun default
 
\begin_inset Formula $p_{2}''\leftarrow$
\end_inset

 
\noun on
LocalSearch(
\begin_inset Formula $p_{2}'$
\end_inset

)
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\noun on
AcceptanceCriterion(
\begin_inset Formula $P,p_{1}''$
\end_inset

); AcceptanceCriterion(
\begin_inset Formula $P,p_{2}''$
\end_inset

);
\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Pseudocode Genetic Local Search
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
AGLS
\end_layout

\begin_layout Standard
Adaptive Genetic Local Search is a variant of Genetic Local Search where
 
\emph on
adaptive pursuit
\begin_inset CommandInset citation
LatexCommand cite
key "thierens2005adaptive"

\end_inset


\emph default
 is used.
 It is initialized with a random population 
\begin_inset Formula $Pop$
\end_inset

 of size 
\begin_inset Formula $n=10$
\end_inset

.
 The adaptive part is the chance to do crossover or a local search iteration.
 
\begin_inset Formula $P$
\end_inset

 is a list of the operators and their chances to be selected.
 
\begin_inset Formula $Q$
\end_inset

 a list of operators and their expected outcome when applied.
 Parameters 
\begin_inset Formula $\alpha$
\end_inset

 and 
\begin_inset Formula $\beta$
\end_inset

 denote the proportionate increment of respectively the values of 
\begin_inset Formula $P$
\end_inset

 and 
\begin_inset Formula $Q$
\end_inset

 when a good operator is found.
 The 
\noun on
AdaptiveUpdate 
\noun default
function updates the 
\begin_inset Formula $P$
\end_inset

 and 
\begin_inset Formula $Q$
\end_inset

 values according to the adaptive pursuit algorithm.
 The acceptance criterion is equal to the one in GLS.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\series bold
for all
\series default
 
\begin_inset Formula $s\in Pop$
\end_inset


\end_layout

\begin_layout Plain Layout

\series bold
do
\series default
 
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset Formula $s\leftarrow$
\end_inset


\noun on
GenerateInitialSolution()
\end_layout

\begin_layout Plain Layout

\series bold
while
\series default
 
\noun on

\begin_inset Formula $\neg$
\end_inset

TimeExpired()
\end_layout

\begin_layout Plain Layout

\series bold
do
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset Formula $a^{s}\leftarrow$
\end_inset

 
\noun on
ProportionallySelectOperator(
\begin_inset Formula $P$
\end_inset

)
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset Formula $p_{1}\leftarrow$
\end_inset

 
\noun on
RandomSelectFromPupulation(
\begin_inset Formula $Pop$
\end_inset

)
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset Formula $p_{2}\leftarrow$
\end_inset

 
\noun on
RandomSelectFromPupulation(
\begin_inset Formula $Pop$
\end_inset

)
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\series bold
if
\series default
 
\begin_inset Formula $a^{s}\equiv CrossOver$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\series bold
then
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Formula $s'\leftarrow$
\end_inset

 
\noun on
CrossOver(
\begin_inset Formula $p_{1},p_{2}$
\end_inset

)
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\noun on
AdaptiveUpdate(
\begin_inset Formula $P,s''$
\end_inset

);
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\noun on
AcceptanceCriterion(
\begin_inset Formula $P,s''$
\end_inset

);
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\series bold
else
\series default
 
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Formula $p_{1}'\leftarrow$
\end_inset


\noun on
 Mutate(
\begin_inset Formula $p_{1}$
\end_inset

); 
\noun default

\begin_inset Formula $p_{2}'\leftarrow$
\end_inset


\noun on
 Mutate(
\begin_inset Formula $p_{2}$
\end_inset

)
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\noun on
AdaptiveUpdate(
\begin_inset Formula $P,Q,\alpha,\beta,p_{1}'$
\end_inset

); AdaptiveUpdate(
\begin_inset Formula $P,Q,\alpha,\beta,p_{2}'$
\end_inset

);
\end_layout

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\noun on
AcceptanceCriterion(
\begin_inset Formula $P,p_{1}'$
\end_inset

); AcceptanceCriterion(
\begin_inset Formula $P,p_{2}'$
\end_inset

);
\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Pseudocode Adaptive Genetic Local Search
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Parameters
\end_layout

\begin_layout Standard
For each of the problem domains and algorithms it is possible to pick different
 Mutation, Crossover and Local Search heuristics.
\end_layout

\begin_layout Standard
When running ILS on the Flow Shop problem it turned out the current chosen
 mutation operator was not able to get out of the local optimum.
 So we ran some short runs to see which ILSn mutation works for Flow Shop.
\end_layout

\begin_layout Standard
The graph in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:FlowShop Mutations"

\end_inset

 shows the different mutations available for FlowShop.
 It turns out operator 2 and 3 don't work on Flow Shop.
 And operator 0 is best.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "80page%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Chunk

<<FlowShopMutation,fig=TRUE,width=6,height=8>>=
\end_layout

\begin_layout Chunk

widthDetails.legendGrob <- function(x) unit(4, "cm")
\end_layout

\begin_layout Chunk

grid.draw(plotInstances("FlowShop", "../plots/FlowShopMutations.csv"))
\end_layout

\begin_layout Chunk

@
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Performance of different mutation operators on Flow Shop on the first three
 instances.
\begin_inset CommandInset label
LatexCommand label
name "fig:FlowShop Mutations"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
After finding this we ran some short test for most of the combinations of
 algorithms, problems and operators where applicable.
 Which resulted in the following most optimal combinations.
 ILS uses the mutation and local search.
 GLS and AGLS use all kinds.
 Only GLS is run to determine the crossover results.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Problem
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mutation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Crossover
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Local Search
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MAX-SAT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bin Packing
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Personnel Scheduling
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Flow Shop
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
13
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Index number of lower heuristics used for each domain
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Results
\end_layout

\begin_layout Subsection
Runs
\end_layout

\begin_layout Standard
To get an indication of the performance of the algorithms two types of experimen
ts are run:
\end_layout

\begin_layout Enumerate
Five run on ten instances of the four problem domains with a time limit
 of ten CPU minutes per run
\end_layout

\begin_layout Enumerate
Ten runs on first instance of the four problem domains with a time limit
 of ten CPU minutes per run
\end_layout

\begin_layout Standard
All runs are performed multithreaded on two threads on a AMD Athlon 2 X4
 600e with 4 cores at 2200 MHz with the default java heap size of 128 Mb.
\end_layout

\begin_layout Subsection
Borda Counts
\end_layout

\begin_layout Standard
The first type of experiments results in the ranking as shown in the borda
 counts in tables 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:BordaSAT"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:BordaBin-Packing"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:BordaPersonnel-Scheduling"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:BordaFlow-Shop"

\end_inset

.
 The borda counts are calculated in the way as described by Burke in 
\begin_inset CommandInset citation
LatexCommand cite
key "burke2011hyflex"

\end_inset

.
 The sum of the algorithms of all problem domains are displayed in table
 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:BordaTotal"

\end_inset

.
\end_layout

\begin_layout Standard
It is clear to see that ILS outperforms GLS and AGLS.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "40col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\align center
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tabular}{ c | c | c | c } MAX-SAT&ILS&GLS&AGLS
\backslash

\backslash
 
\backslash
hline Instance0&1&3&2
\backslash

\backslash
 Instance1&1&3&2
\backslash

\backslash
 Instance2&1&3&2
\backslash

\backslash
 Instance3&1&3&2
\backslash

\backslash
 Instance4&1&3&2
\backslash

\backslash
 Instance5&1&2&3
\backslash

\backslash
 Instance6&1&2&2
\backslash

\backslash
 Instance7&1&2&3
\backslash

\backslash
 Instance8&1&2&3
\backslash

\backslash
 Instance9&1&2&3
\backslash

\backslash
 
\backslash
hline Total&
\backslash
textbf{10}&25&24
\backslash

\backslash
 
\backslash
end{tabular}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Borda counts of the first ten SAT instances.
\begin_inset CommandInset label
LatexCommand label
name "tab:BordaSAT"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "40col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\align center
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tabular}{ c | c | c | c } Bin Packing&ILS&GLS&AGLS
\backslash

\backslash
 
\backslash
hline Instance0&1&3&2
\backslash

\backslash
 Instance1&1&2&3
\backslash

\backslash
 Instance2&3&1&2
\backslash

\backslash
 Instance3&1&2&3
\backslash

\backslash
 Instance4&1&2&3
\backslash

\backslash
 Instance5&1&3&2
\backslash

\backslash
 Instance6&1&3&2
\backslash

\backslash
 Instance7&1&2&3
\backslash

\backslash
 Instance8&1&3&2
\backslash

\backslash
 Instance9&1&3&2
\backslash

\backslash
 
\backslash
hline Total&
\backslash
textbf{12}&24&24
\backslash

\backslash
 
\backslash
end{tabular}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Borda counts of the first ten Bin Packing instances.
\begin_inset CommandInset label
LatexCommand label
name "tab:BordaBin-Packing"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "40col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\align center
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tabular}{ c | c | c | c } Personnel Sched.&ILS&GLS&AGLS
\backslash

\backslash
 
\backslash
hline Instance0&1&3&2
\backslash

\backslash
 Instance1&1&3&2
\backslash

\backslash
 Instance2&1&2&3
\backslash

\backslash
 Instance3&1&3&2
\backslash

\backslash
 Instance4&1&2&3
\backslash

\backslash
 Instance5&1&3&2
\backslash

\backslash
 Instance6&1&3&2
\backslash

\backslash
 Instance7&1&3&2
\backslash

\backslash
 Instance8&1&3&2
\backslash

\backslash
 Instance9&1&3&2
\backslash

\backslash
 
\backslash
hline Total&
\backslash
textbf{10}&28&22
\backslash

\backslash
 
\backslash
end{tabular}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Borda counts of the first ten Personnel Scheduling instances.
\begin_inset CommandInset label
LatexCommand label
name "tab:BordaPersonnel-Scheduling"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "40col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\align center
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tabular}{ c | c | c | c } Flow Shop&ILS&GLS&AGLS
\backslash

\backslash
 
\backslash
hline Instance0&1&2&3
\backslash

\backslash
 Instance1&1&3&2
\backslash

\backslash
 Instance2&1&2&3
\backslash

\backslash
 Instance3&1&2&3
\backslash

\backslash
 Instance4&1&2&3
\backslash

\backslash
 Instance5&1&3&2
\backslash

\backslash
 Instance6&1&3&2
\backslash

\backslash
 Instance7&1&3&2
\backslash

\backslash
 Instance8&1&2&3
\backslash

\backslash
 Instance9&1&3&2
\backslash

\backslash
 
\backslash
hline Total&
\backslash
textbf{10}&25&25
\backslash

\backslash
 
\backslash
end{tabular}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Borda counts of the first ten Flow Shop instances.
\begin_inset CommandInset label
LatexCommand label
name "tab:BordaFlow-Shop"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tabular}{ l | c | c | c } 
\end_layout

\begin_layout Plain Layout

Domain&ILS&GLS&AGLS
\backslash

\backslash
 
\end_layout

\begin_layout Plain Layout


\backslash
hline
\end_layout

\begin_layout Plain Layout

MAX-SAT&
\backslash
textbf{10}&25&24
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

Bin Packing&
\backslash
textbf{12}&24&24
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

Personnel Scheduling&
\backslash
textbf{10}&28&22
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

Flow Shop &
\backslash
textbf{10}&25&25
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hline
\end_layout

\begin_layout Plain Layout

Total&
\backslash
textbf{42}&102&95
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
end{tabular}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Sum of the borda counts of all problem instances and domains.
\begin_inset CommandInset label
LatexCommand label
name "tab:BordaTotal"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Some more insight can be given by looking at the plots of the instances
 in Appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Plots-of-the"

\end_inset

.
 
\end_layout

\begin_layout Standard
There it can be clearly seen that on SAT ILS quicker finds better solutions
 where GLS and AGLS get stuck at a worser optimum.
 
\end_layout

\begin_layout Standard
With Bin Packing it is visible that ILS continues to find better solutions
 when GLS and AGLS stagnate.
 
\end_layout

\begin_layout Standard
The Personnel Scheduling problem result in a couple of instances where the
 algorithms perform alike and ILS outperforms the others only by a small
 difference.
 In the last three instances ILS has a vast improvement over GLS and AGLS.
\end_layout

\begin_layout Standard
With the Flow Shop problem ILS finds better solutions more quick.
 It would be interesting to see what happens here if the all the algorithms
 would get more time to run.
 The plots suggest that a optimum is still improving.
\end_layout

\begin_layout Subsection
Box Plots
\end_layout

\begin_layout Standard
Similar insights can be gained by looking at the box plots from second experimen
t
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Boxplots"

\end_inset

.
 Here we can also see the difference in performance.
 Note that these box plots are obtained by running every instance 10 times
 instead of 5.
 This gives supports the results gained by the first experiment.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Chunk

<<BoxPlots,fig=TRUE,width=6,height=8>>=
\end_layout

\begin_layout Chunk

plotBoxPlots("../plots/BoxPlots.csv")
\end_layout

\begin_layout Chunk

@
\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Performance of different Hyper Heuristics on 10 runs of the first instances
 of each domain.
 Shown here are the box plots based on 
\family typewriter
getFitnessTrace()
\family default
.
 Overlain is a representation of the actual data points.
 The black dots are outliers.
\begin_inset CommandInset label
LatexCommand label
name "fig:Boxplots"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Interesting to see is that the difference between AGLS and GLS is minimal
 and that GLS is almost always better.
 Both in finding the best solution as in the speed at which it converges
 at the solution.
 
\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
We were quite surprised by the results since we expected AGLS to outperform
 ILS on at least some domains.
 In the original paper there was a significant difference between the domains
 in terms of heuristic performance.
 In our experiments we did not see such a difference.
 ILS outperforms both other algorithms with ease.
 
\end_layout

\begin_layout Standard
We a saw no significant difference between both genetic algorithms although
 we expected AGLS to perform much better than GLS.
 GLS is very similar to AGLS but it uses uniform random selection of the
 type of operator used.
 This leads to the conclusion that the adaptive pursuit mechanism used cannot
 reliably predict which operator to choose.
 We suspect that this originates from a mismatch between the lower heuristics
 used and the problem domain.
\end_layout

\begin_layout Standard
The variant of AGLS described in this report adaptively selects the type
 of the operator to use.
 It might be interesting to see a different variant of AGLS that adaptively
 selects which crossover and/or mutation operator to use.
\end_layout

\begin_layout Subsection
Critical Remarks
\end_layout

\begin_layout Subsubsection
Framework
\end_layout

\begin_layout Standard
We found a quirk in the framework which made a workarounds necessary.
 The Hyper-heuristic class uses a static variable which is unnecessarily
 static.
 This puts some constraints on the initialization phase in multithreaded
 environments.
 This is not a big issue, but together with other 
\begin_inset Quotes eld
\end_inset

interesting
\begin_inset Quotes erd
\end_inset

 choices within the framework it gives rise to some doubts about the quality
 of code used in the framework.
\end_layout

\begin_layout Subsubsection
getFitnessTrace()
\end_layout

\begin_layout Standard
The original paper and the framework heavily rely on the use of 
\family typewriter
getFitnessTrace()
\family default
 we found that the implementation of 
\family typewriter
getFitnessTrace()
\family default
 always shows the best result found so far.
 This means that for some instances every value in the trace is the same
 as the best one.
 This happens when the algorithm never finds a better solution after the
 initial generated solution.
 For our algorithms with a population or for algorithms which might select
 a worse solution with a certain chance this leads to a situation where
 the fitness trace does not represent what the algorithm is doing.
 For those cases it is very difficult to see if an algorithm is stagnating
 or climbing out of the current 
\begin_inset Quotes eld
\end_inset

pit
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Subsubsection
Operator choice
\end_layout

\begin_layout Standard
First is the correspondence between the lower heuristics and their description
 in the paper.
 We found no way to tell which description belonged to which lower heuristic,
 this made it very difficult to select a suitable heuristic.
 In the end we resorted to trying every lower heuristic on each problem
 to find the ones that at least seem to make some improvements.
 This made improvements on some problems but conceptually this seems a bad
 idea.
 A heuristic which seems to make no improvement in the first stages may
 be really suited to fine tune already good solutions.
 It seems that the framework is mainly suited to be used with adaptive pursuit
 type of algorithms where knowledge of the underlying algorithms is not
 important.
 Poor heuristic choice might also be the case why our results are unexpected
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "literature"
options "plain"

\end_inset


\end_layout

\begin_layout Section
\start_of_appendix
Plots of the first experiment type
\begin_inset CommandInset label
LatexCommand label
name "sec:Plots-of-the"

\end_inset


\end_layout

\begin_layout Chunk
<<1SAT,fig=TRUE,width=8,height=12>>=
\end_layout

\begin_layout Chunk
grid.draw(plotInstances("SAT", "../plots/final1.csv"))
\end_layout

\begin_layout Chunk
@
\end_layout

\begin_layout Chunk

\end_layout

\begin_layout Chunk
<<1BinPacking,fig=TRUE,width=8,height=12>>=
\end_layout

\begin_layout Chunk
grid.draw(plotInstances("BinPacking", "../plots/final1.csv"))
\end_layout

\begin_layout Chunk
@
\end_layout

\begin_layout Chunk

\end_layout

\begin_layout Chunk
<<1PersonnelScheduling,fig=TRUE,width=8,height=12>>=
\end_layout

\begin_layout Chunk
grid.draw(plotInstances("PersonnelScheduling", "../plots/final1.csv"))
\end_layout

\begin_layout Chunk
@
\end_layout

\begin_layout Chunk

\end_layout

\begin_layout Chunk
<<1FlowShop,fig=TRUE,width=8,height=12>>=
\end_layout

\begin_layout Chunk
grid.draw(plotInstances("FlowShop", "../plots/final1.csv"))
\end_layout

\begin_layout Chunk
@
\end_layout

\end_body
\end_document
